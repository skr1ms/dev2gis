events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" rt=$request_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    server_tokens off;

    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream go_orchestrator {
        server go-orchestrator:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream minio {
        server minio:9000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream minio_console {
        server minio:9001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    server {
        listen 80;
        server_name _;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        location ~ /\. {
            deny all;
            return 404;
        }

        location ~* \.(php|asp|aspx|jsp|cgi)$ {
            deny all;
            return 444;
        }

        location /_next/static/ {
            limit_req zone=static burst=200 nodelay;
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location /api/heightmaps/upload {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 100M;
            
            proxy_pass http://go_orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 1800s;
            proxy_connect_timeout 300s;
            proxy_send_timeout 1800s;
        }

        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://go_orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /minio {
            rewrite ^/minio$ /minio/ permanent;
        }

        location /minio/ {
            proxy_pass http://minio_console/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            chunked_transfer_encoding off;
            client_max_body_size 100M;
        }

        location /uav-data/ {
            internal;
            proxy_pass http://minio/uav-data/;
            proxy_set_header Host $http_host;
        }

        location /uav-models/ {
            proxy_pass http://minio/uav-models/;
            proxy_set_header Host $http_host;
            add_header Cache-Control "public, max-age=86400";
        }

        location /grafana {
            rewrite ^/grafana$ /grafana/ permanent;
        }

        location /grafana/ {
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/api/live/ {
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            allow 127.0.0.1;
            deny all;
        }

        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /minio/\nDisallow: /grafana/\n";
            add_header Content-Type text/plain;
        }

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }
    }
}
